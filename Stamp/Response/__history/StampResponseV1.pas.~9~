unit StampResponseV1;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2018-09-26 18:06:06
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TDataClass = class
private
  FCadenaOriginalSAT: String;
  FCfdi: String;
  FFechaTimbrado: TDateTime;
  FNoCertificadoCFDI: String;
  FNoCertificadoSAT: String;
  FQrCode: String;
  FSelloCFDI: String;
  FSelloSAT: String;
  FUuid: String;
public
  property cadenaOriginalSAT: String read FCadenaOriginalSAT write FCadenaOriginalSAT;
  property cfdi: String read FCfdi write FCfdi;
  property fechaTimbrado: TDateTime read FFechaTimbrado write FFechaTimbrado;
  property noCertificadoCFDI: String read FNoCertificadoCFDI write FNoCertificadoCFDI;
  property noCertificadoSAT: String read FNoCertificadoSAT write FNoCertificadoSAT;
  property qrCode: String read FQrCode write FQrCode;
  property selloCFDI: String read FSelloCFDI write FSelloCFDI;
  property selloSAT: String read FSelloSAT write FSelloSAT;
  property uuid: String read FUuid write FUuid;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TDataClass;
end;

TResponseV1 = class
private
  FData: TDataClass;
  FStatus: String;
public
  property data: TDataClass read FData write FData;
  property status: String read FStatus write FStatus;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TResponseV1;
end;

implementation

{TDataClass}


function TDataClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TDataClass.FromJsonString(AJsonString: string): TDataClass;
begin
  result := TJson.JsonToObject<TDataClass>(AJsonString)
end;

{TResponseV1}

constructor TResponseV1.Create;
begin
  inherited;
  FData := TDataClass.Create();
end;

destructor TResponseV1.Destroy;
begin
  FData.free;
  inherited;
end;

function TResponseV1.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TResponseV1.FromJsonString(AJsonString: string): TResponseV1;
begin
  result := TJson.JsonToObject<TResponseV1>(AJsonString)
end;

end.

