unit IssueJsonRequest;

interface
uses
  System.SysUtils,
  System.Variants,
  System.Classes,
  System.JSON,
  System.JSON.Builders,
  System.JSON.Writers,
  System.JSON.Readers,
  System.JSON.BSON,
  IdHTTP, IdGlobal,
  IdCoder,
  IdCoder3to4,
  IdCoderMIME,
  IdMultipartFormData,
  IdGlobalProtocols,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, IPPeerClient, Vcl.StdCtrls, REST.Client,
  Data.Bind.Components, Data.Bind.ObjectScope, REST.Types,
  Datasnap.DSClientRest, Vcl.ComCtrls, StampRequest, StampResponseV1,
  StampResponseV2, StampResponseV3, StampResponseV4;

implementation

function IssueJsonReq(): String;
var
  HTTP: TIdHTTP;
  RequestBody: TStream;
  ResponseBody: string;
begin

  HTTP := TIdHTTP.Create;
  try
    try
      RequestBody := TStringStream.Create();
      try
        HTTP.Request.Accept := 'application/json';
        HTTP.Request.ContentType := 'application/json';
        HTTP.Request.CustomHeaders.FoldLines := False;
        HTTP.Request.CustomHeaders.Add('Authorization:Bearer ' + Token);

        try
          Result := HTTP.Post(URL + '/v3/cfdi33/issue/json/' + AnsiUpperCase(LRFC) + '/');
        except
          on E: EIdHTTPProtocolException do
            if (HTTP.ResponseCode = 400) then
              Result := E.ErrorMessage
            else
              Result := E.Message;
        end;
      finally
      end;
    finally
    end;
  finally
    HTTP.Free;
  end;
  ReportMemoryLeaksOnShutdown := False;
end;

end.
