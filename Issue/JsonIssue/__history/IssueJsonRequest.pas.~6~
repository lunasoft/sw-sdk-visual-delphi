unit IssueJsonRequest;

interface

implementation

function IssueJsonReq(): String;
var
  HTTP: TIdHTTP;
  RequestBody: TStream;
  ResponseBody: string;
begin

  HTTP := TIdHTTP.Create;
  try
    try
      RequestBody := TStringStream.Create();
      try
        HTTP.Request.Accept := 'application/json';
        HTTP.Request.ContentType := 'application/json';
        HTTP.Request.CustomHeaders.FoldLines := False;
        HTTP.Request.CustomHeaders.Add('Authorization:Bearer ' + Token);

        try
          Result := HTTP.Post(URL + '/v3/cfdi33/issue/json/' + AnsiUpperCase(LRFC) + '/');
        except
          on E: EIdHTTPProtocolException do
            if (HTTP.ResponseCode = 400) then
              Result := E.ErrorMessage
            else
              Result := E.Message;
        end;
      finally
      end;
    finally
    end;
  finally
    HTTP.Free;
  end;
  ReportMemoryLeaksOnShutdown := False;
end;

end.
